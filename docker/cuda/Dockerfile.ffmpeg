# docker run --runtime=nvidia -ti --rm --tmpfs /tmp roflcoopter/ffmpeg-cuda:1.0 bash
FROM nvidia/cuda:11.1-devel-ubuntu18.04

ENV DEBIAN_FRONTEND="noninteractive"
RUN apt-get update && apt-get install -y --no-install-recommends \
    autoconf \
    autogen \
    automake \
    libtool \
    libdrm-dev \
    ca-certificates \
    git \
    libgl1-mesa-glx \
    make \
    pkgconf \
    nasm && \
    rm -rf /var/lib/apt/lists/*

# Install VA-API
WORKDIR /
RUN git clone https://github.com/intel/libva && \
    git clone https://github.com/intel/intel-vaapi-driver && \
    git clone https://github.com/intel/libva-utils && \
    cd /libva && \
    bash autogen.sh && \
    ./configure --prefix=/usr && \
    make && \
    make install && \
    cd /intel-vaapi-driver && \
    bash autogen.sh && \
    ./configure --prefix=/usr && \
    make && \
    make install && \
    cd /libva-utils && \
    bash autogen.sh && \
    ./configure --prefix=/usr && \
    make && \
    make install

# NVIDIA Codec Headers are not included since FFMPEG version 4.0
WORKDIR /usr/local/src
RUN git clone --depth 1 --branch n10.0.26.1 https://git.videolan.org/git/ffmpeg/nv-codec-headers.git \
    && cd nv-codec-headers \
    && make \
    && make install \
    && cd .. \
    && rm -rf nv-codec-headers

# ffmpeg checks for nvcc using compute_30, which is not supported in CUDA 11.
# Lowest supported compute architecture is compute_52 so we patch this here.
# Architecture information is found here: https://en.wikipedia.org/wiki/CUDA (5.2=compute_52)
RUN git clone --depth 1 --branch n4.3 https://github.com/ffmpeg/ffmpeg ffmpeg && \
    cd ffmpeg && \
    sed -i -e 's/compute_30/compute_52/g' ./configure && \
    sed -i -e 's/sm_30/sm_52/g' ./configure && \
    ./configure \
    --enable-cuda \
    --enable-cuvid \
    --enable-nvenc \
    --enable-nonfree \
    --enable-libnpp \
    --enable-cuda-nvcc \
    --enable-filter=scale_cuda \
    --enable-filter=thumbnail_cuda \
    --enable-vaapi \
    --extra-cflags=-I/usr/local/cuda/include \
    --extra-ldflags=-L/usr/local/cuda/lib64 \
    --prefix=/usr/local/ffmpeg --enable-shared --disable-static \
    --disable-manpages --disable-doc --disable-podpages && \
    make -j"$(nproc)" install && \
    ldconfig

# Add FFMPEG to PATH
ENV PATH=/usr/local/ffmpeg/bin:$PATH
# Specify FFMPEG library folder
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/ffmpeg/lib
ENV NVIDIA_DRIVER_CAPABILITIES all
