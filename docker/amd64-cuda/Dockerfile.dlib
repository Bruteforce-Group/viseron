ARG CUDA_VERSION
ARG UBUNTU_VERSION_NUMBER
FROM nvidia/cuda:${CUDA_VERSION}-cudnn9-devel-ubuntu${UBUNTU_VERSION_NUMBER} AS build

ARG DLIB_VERSION
ARG MAKEFLAGS="-j2"

ENV \
  DEBIAN_FRONTEND=noninteractive \
  PIP_IGNORE_INSTALLED=0

RUN buildDeps="autoconf \
  automake \
  ca-certificates \
  wget \
  cmake \
  g++ \
  gcc \
  git \
  libopenblas-dev \
  liblapack-dev \
  make \
  python3-dev \
  python3-pip \
  python3-setuptools \
  python3-wheel" && \
  apt-get -yqq update && \
  apt-get install -yq --no-install-recommends ${buildDeps}

ARG UBUNTU_VERSION_NUMBER
RUN \
  # Install CUDNN 8 since OpenCV 4.9 does not support CUDNN 9
  UBUNTU_VERSION=$(echo $UBUNTU_VERSION_NUMBER | tr -d '.') && \
  wget "https://developer.download.nvidia.com/compute/redist/cudnn/v8.8.0/local_installers/12.0/cudnn-local-repo-ubuntu$UBUNTU_VERSION-8.8.0.121_1.0-1_amd64.deb" -O cudnn-local-repo.deb && \
  dpkg -i cudnn-local-repo.deb && \
  cp /var/cudnn-local-repo-ubuntu$UBUNTU_VERSION-8.8.0.121/cudnn-local-04B81517-keyring.gpg /usr/share/keyrings/ && \
  apt-get update && \
  apt-get install -y libcudnn8 libcudnn8-dev && \
  rm cudnn-local-repo.deb

# Create dlib wheel
RUN \
  DIR=/tmp && mkdir -p ${DIR} && cd ${DIR} && \
  git clone --branch v${DLIB_VERSION} --depth 1 https://github.com/davisking/dlib.git && \
  cd dlib; python3 setup.py --set DLIB_USE_CUDA_COMPUTE_CAPABILITIES:STRING=50,52,53,60,61,70,72,75,80,86,87,89,90 bdist_wheel --dist-dir=/wheels \
  \
  && ls -al /wheels/

FROM scratch as scratch
COPY --from=build /wheels /wheels/
