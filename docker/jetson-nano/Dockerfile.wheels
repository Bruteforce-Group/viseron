ARG UBUNTU_VERSION
ARG PYTHON_VERSION
ARG DLIB_VERSION
ARG JETPACK_VERSION
FROM roflcoopter/jetson-nano-dlib:${DLIB_VERSION} as dlib
FROM roflcoopter/jetson-nano-python:${PYTHON_VERSION} as python
FROM balenalib/jetson-nano-ubuntu:${UBUNTU_VERSION}-build as qemu
FROM nvcr.io/nvidia/l4t-base:r${JETPACK_VERSION} as build

COPY --from=qemu /usr/bin/qemu-aarch64-static /usr/bin/qemu-aarch64-static
COPY --from=qemu /usr/bin/cross-build-start /bin/cross-build-start
COPY --from=qemu /usr/bin/cross-build-end /bin/cross-build-end
COPY --from=qemu /usr/bin/resin-xbuild /usr/bin/resin-xbuild

COPY --from=dlib /wheels /wheels

COPY --from=python /usr/local /usr/local/
RUN \
  cd /usr/local/bin && \
  ln -s idle3 idle && \
  ln -s pydoc3 pydoc && \
  ln -s python3 python

ENV \
  DEBIAN_FRONTEND=noninteractive \
  PIP_IGNORE_INSTALLED=0

RUN [ "cross-build-start" ]

RUN apt-get -yqq update && apt-get install -yq --no-install-recommends \
  curl \
  gcc \
  python3 \
  python3-dev \
  python3-pip \
  python3-setuptools \
  python3-wheel \
  libgirepository1.0-dev\
  libcairo2-dev \
  && python3 -m pip install --upgrade pip \
  && apt-get autoremove -y && apt-get clean -y \
  && python3 -m pip install numpy pybind11

ADD requirements.txt requirements.txt
RUN \
  mkdir -p /wheels \
  \
  && python3 -m pip wheel --wheel-dir=/wheels --find-links=/wheels -r /requirements.txt \
  \
  && ls -al /wheels/

FROM scratch
COPY --from=build /wheels /wheels
COPY docker/jetson-nano/pycoral-2.0.0-cp38-cp38-linux_aarch64.whl /wheels/
COPY docker/jetson-nano/tflite_runtime-2.5.0.post1-cp38-cp38-linux_aarch64.whl /wheels/
