parameters:
  - name: architecture
    type: string
  - name: namespace
    type: string
    default: roflcoopter
  - name: image
    type: string
  - name: imageNameOnly
    type: boolean
    default: false
  - name: crossBuild
    type: boolean
    default: true
  - name: timeoutJob
    type: number
    default: 360
  - name: release
    type: boolean
    default: false

jobs:
  - job: Build_${{ parameters.architecture }}-${{ parameters.image }}
    timeoutInMinutes: ${{ parameters.timeoutJob }}
    pool:
      vmImage: "ubuntu-latest"
    steps:
      - task: Docker@2
        displayName: Login to Docker Hub
        inputs:
          command: login
          containerRegistry: "Docker Hub"

      - script: docker run --rm --privileged tonistiigi/binfmt --install all
        displayName: Register QEMU for cross-builds
        condition: and(succeeded(), eq('${{ parameters.crossBuild }}', true))

      - script: |
          cd $(Agent.BuildDirectory)/s/docker
          docker-compose --file ../azure-pipelines/docker-compose-build.yaml --env-file ../azure-pipelines/.env pull ${{ parameters.architecture }}-${{ parameters.image }}
        displayName: Pull ${{ parameters.architecture }}-${{ parameters.image }} for Docker layer caching
        continueOnError: true

      - script: |
          cd $(Agent.BuildDirectory)/s/docker
          docker-compose --file ../azure-pipelines/docker-compose-build.yaml --env-file ../azure-pipelines/.env build --build-arg BUILDKIT_INLINE_CACHE=1 ${{ parameters.architecture }}-${{ parameters.image }}
        displayName: Build ${{ parameters.architecture }}-${{ parameters.image }}
        condition: and(succeeded(), eq('${{ parameters.imageNameOnly }}', false))
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
          BUILDKIT_PROGRESS: plain
      - script: |
          cd $(Agent.BuildDirectory)/s/docker
          docker-compose --file ../azure-pipelines/docker-compose-build.yaml --env-file ../azure-pipelines/.env build --build-arg BUILDKIT_INLINE_CACHE=1 ${{ parameters.image }}
        displayName: Build ${{ parameters.image }}
        condition: and(succeeded(), eq('${{ parameters.imageNameOnly }}', true))
        env:
          DOCKER_BUILDKIT: 1
          COMPOSE_DOCKER_CLI_BUILD: 1
          BUILDKIT_PROGRESS: plain

      # Runs only for non-release triggers
      - script: |
          cd $(Agent.BuildDirectory)/s/docker
          docker-compose --file ../azure-pipelines/docker-compose-build.yaml --env-file ../azure-pipelines/.env push ${{ parameters.architecture }}-${{ parameters.image }}
        displayName: Push ${{ parameters.architecture }}-${{ parameters.image }}
        condition: and(succeeded(), eq('${{ parameters.imageNameOnly }}', false), eq('${{ parameters.release }}', false))
      - script: |
          cd $(Agent.BuildDirectory)/s/docker
          docker-compose --file ../azure-pipelines/docker-compose-build.yaml --env-file ../azure-pipelines/.env push ${{ parameters.image }}
        displayName: Push ${{ parameters.image }}
        condition: and(succeeded(), eq('${{ parameters.imageNameOnly }}', true), eq('${{ parameters.release }}', false))

      # Runs only for release triggers
      - template: release_version.yaml
        parameters:
          release: ${{ parameters.release }}
      - script: |
          echo tagging roflcoopter/${{ parameters.architecture }}-${{ parameters.image }}:$(viseronVersion)
          docker image tag roflcoopter/${{ parameters.architecture }}-${{ parameters.image }}:dev roflcoopter/${{ parameters.architecture }}-${{ parameters.image }}:$(viseronVersion)
          docker image push roflcoopter/${{ parameters.architecture }}-${{ parameters.image }}:$(viseronVersion)

          if [ $(latestRelease) = true ] ; then
            echo tagging roflcoopter/${{ parameters.architecture }}-${{ parameters.image }}:latest
            docker image tag roflcoopter/${{ parameters.architecture }}-${{ parameters.image }}:dev roflcoopter/${{ parameters.architecture }}-${{ parameters.image }}:latest
            docker image push roflcoopter/${{ parameters.architecture }}-${{ parameters.image }}:latest
          fi
        displayName: Push ${{ parameters.architecture }}-${{ parameters.image }}
        condition: and(succeeded(), eq('${{ parameters.release }}', true))

      - task: Docker@2
        displayName: Logoff Docker Hub
        inputs:
          command: logout
          containerRegistry: "Docker Hub"
          condition: always()
